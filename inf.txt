установка ЕНВ
py -m venv env 
=========================================================
https://github.com/TheZhenok/my_steam.git
=========================================================
сохр библиотеки и вываливаем
pip freeze > bibls
pip install -r bibls
==========================================================================================
1. ”далить всЄ, кроме __init__ в папке migrations
2. ”далить файл db.sqlite3
3. git stash
4. git pull origin main
5. “ак же удалить всЄ, что и в первом и втором пункте
6. py manage.py makemigrations
7. py manage.py migrate
8. py manage.py createsuperuser
==========================================================================================


python manage.py runserver 8000


Stepkar
Bnnm8899




=======================================

проверить, что Git установился
git --version

=======================================
Настраиваем Git
git config --global user.name Vassaga

git config --global user.email Vladislav_Lomov@mail.ru

=======================================

проверяем статус
git status

пуллим
git pull

=======================================
добавляем все изменения
git add .

комиттим все изменения с "сообщением"
git commit -m "---massage---"

пушим
git push
=======================================

GIT DELETE ALL SET
git config --global --uset-all



            "X-RapidAPI-Key": "b52c10efa4mshb49d9a05fb930a7p1a755fjsn735e84205bb2",
            "X-RapidAPI-Host": "cheapshark-game-deals.p.rapidapi.com"


breakpoint()

(Pdb)
<QueryDict: {'csrfmiddlewaretoken': ['bJCgNiwhHzP61D6IMUwMLIwMwicSL5uwVPjUGKKbMkSbZBVPyoEqNZFU4oMTtkRO'], 'genre': ['on', 'on', 'on', 'on']}>
(Pdb) request.POST
(Pdb) <QueryDict: {'csrfmiddlewaretoken': ['K2PiDGaFo07cYwhHrm5KMrzXGgNEJVDJu8wWw8oztLahWu6OdQdoOII5emnFra01'], 'name': ['Fifa'], 'price': ['1500'], 'datetime_created': ['2005-07-01'], 'Company': ['Fasa'], 'genre_20': ['on'], 'genre_19': ['on'], 'genre_13': ['on']}>


C:\Users\Ћомов¬\Documents\django-222\new>cd steam
C:\Users\Ћомов¬\Documents\django-222\new\steam>env\scripts\activate
(env) C:\Users\Ћомов¬\Documents\django-222\new\steam>code .

Как проверить, что Git установился
git --version

Настраиваем Git
git config --global user.name Vassaga

git config --global user.email Vladislav_Lomov@mail.ru


Создаём новый SSH-ключ

ssh-keygen -t ed25519 -C "Vladislav_Lomov@mail.ru"

Терминал спросит, куда сохранить ключ. Если не хотите менять имя файла, которое предлагает терминал, просто нажмите Enter.
> Generating public/private имя-ключа key pair.
> Enter a file in which to save the key (/c/Users/ваш-профиль/.ssh/id_имя-ключа):*[Press enter]*

Теперь нужно добавить пароль, которым будет зашифрован ваш ключ. Это стоит сделать, иначе в дальнейшем могут быть проблемы с настройкой, да и так просто безопаснее.

В результате создаётся новый SSH-ключ, привязанный к вашей электронной почте.

______________________
Создание репозитория
______________________
Теперь вы готовы к работе с Git локально на компьютере.

Создадим наш первый репозиторий. Для этого пройдите в папку вашего проекта.

#Для Linux и MacOS путь может выглядеть так /Users/UserName/Desktop/MyProject
#Для Windows например С://MyProject
cd <путь_к_вашему_проекту>

#Инициализация/создание репозитория
git init

Теперь Git отслеживает изменения файлов вашего проекта. Но, так как вы только создали репозиторий в нем нет вашего кода. Для этого необходимо создать commit.

#Добавим все файлы проекта в нам будующий commit
git add .
#Или так
git add --all

#Если хотим добавить конкретный файл то можно так
git add <имя_файла> 

#Теперь создаем commit. Обязательно указываем комментарий.
#И не забываем про кавычки
git commit -m "<комментарий>"
Отлично. Вы создали свой первый репозиторий и заполнили его первым commit.

ssh -T git@github.com
проверяем авторизацию

eval "$(ssh-agent -s)"
запускаем агента ключей

ssh-add ~/.ssh/workkompkey
вносим в агента ключ

